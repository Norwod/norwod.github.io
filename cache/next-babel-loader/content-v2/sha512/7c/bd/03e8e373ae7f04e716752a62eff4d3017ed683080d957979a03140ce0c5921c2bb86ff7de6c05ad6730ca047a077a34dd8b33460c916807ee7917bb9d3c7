{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { addFocus, applyRoundness } from '@sberdevices/plasma-core/mixins';\nimport { isSberBox } from '@sberdevices/plasma-ui/utils/deviceDetection';\nconst Container = styled.div`\n    outline: none;\n    ${isSberBox() && css`\n        margin-left: -24px;\n        padding-left: 24px;\n        width: calc(100% + 48px);\n        ${addFocus};\n    `}\n\n    &::before {\n        ${applyRoundness}\n    }\n`;\nexport const FocusableContainer = (_ref) => {\n  let {\n    children\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return __jsx(Container, _extends({\n    tabIndex: 0,\n    roundness: 16\n  }, props), children);\n};\nexport default FocusableContainer;","map":null,"metadata":{},"sourceType":"module"}