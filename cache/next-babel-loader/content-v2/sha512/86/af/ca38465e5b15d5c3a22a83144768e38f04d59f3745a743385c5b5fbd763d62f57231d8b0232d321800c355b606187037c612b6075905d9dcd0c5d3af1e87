{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Container, Header } from '@sberdevices/plasma-ui';\nimport { body1 } from '@sberdevices/plasma-tokens';\nimport { detectDevice, isSberPortal } from '@sberdevices/plasma-ui/utils/deviceDetection';\nimport styled from 'styled-components';\nimport { useRouter } from 'next/router';\nconst StyledHeader = styled.div`\n    top: 0;\n    left: 0;\n    width: 100%;\n    z-index: -1;\n    ${body1};\n    /* stylelint-disable */\n    background: ${detectDevice() === 'mobile' ? '#000' : `\n        linear-gradient(\n            180deg,\n            rgba(0, 0, 0, 0.7) 0%,\n            rgba(0, 0, 0, 0.6) 20%,\n            rgba(0, 0, 0, 0.5) 40%,\n            rgba(0, 0, 0, 0.35) 60%,\n            rgba(0, 0, 0, 0.1) 80%,\n            rgba(0, 0, 0, 0) 100%\n        )\n    `};\n    /* stylelint-enable */\n`;\n\nconst MyHeader = (_ref) => {\n  let {\n    label,\n    onBack\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"label\", \"onBack\"]);\n\n  const router = useRouter();\n  const back = detectDevice() === 'mobile' || isSberPortal() && !onBack;\n  return __jsx(StyledHeader, props, __jsx(Container, null, __jsx(Header, {\n    style: body1,\n    back: true,\n    onBackClick: onBack !== null && onBack !== void 0 ? onBack : router.back,\n    title: label\n  })));\n};\n\nexport default MyHeader;","map":null,"metadata":{},"sourceType":"module"}