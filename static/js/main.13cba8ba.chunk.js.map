{"version":3,"sources":["store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["reducer","state","action","type","notes","id","Math","random","toString","substring","title","note","completed","map","filter","Error","useStyles","makeStyles","theme","root","margin","spacing","valueCount","valueHunger","valueLevel","App","memo","useReducer","appState","dispatch","assistantStateRef","useRef","assistantRef","useEffect","getState","current","createAssistant","on","item_selector","items","index","number","classes","React","useState","setValue","renderResult","result","xHunger","xLevel","document","getElementById","innerHTML","className","Typography","gutterBottom","Slider","defaultValue","aria-labelledby","step","marks","onChange","event","newValue","min","max","valueLabelDisplay","Button","variant","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.13cba8ba.chunk.js","sourcesContent":["type Note = {\n  id: string;\n  title: string;\n  completed: boolean;\n};\n\ntype State = {\n  notes: Array<Note>;\n};\n\ntype Action =\n  | {\n      type: \"add_note\";\n      note: string;\n    }\n  | {\n      type: \"done_note\";\n      id: string;\n    }\n  | {\n      type: \"delete_note\";\n      id: string;\n    };\n\nexport const reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case \"add_note\":\n      return {\n        ...state,\n        notes: [\n          ...state.notes,\n          {\n            id: Math.random().toString(36).substring(7),\n            title: action.note,\n            completed: false,\n          },\n        ],\n      };\n\n    case \"done_note\":\n      return {\n        ...state,\n        notes: state.notes.map((note) =>\n          note.id === action.id ? { ...note, completed: !note.completed } : note\n        ),\n      };\n\n    case \"delete_note\":\n      return {\n        ...state,\n        notes: state.notes.filter(({ id }) => id !== action.id),\n      };\n\n    default:\n      throw new Error();\n  }\n};\n","import React, {\n  FC,\n  memo,\n  useReducer,\n  useRef,\n  useEffect,\n} from \"react\";\nimport {\n  createSmartappDebugger,\n  createAssistant,\n  AssistantAppState,\n} from \"@sberdevices/assistant-client\";\nimport \"./App.css\";\n\n\nimport Slider from '@material-ui/core/Slider';\nimport { reducer } from \"./store\";\nimport { Button,  Typography } from \"@material-ui/core\";\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\n\n\n\nconst initializeAssistant = (getState: any) => {\n  if (process.env.NODE_ENV === \"development\") {\n    return createSmartappDebugger({\n      token: process.env.REACT_APP_TOKEN ?? \"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxYTk3YzdmZGI2NjdhMDdlNGZlNjJmNTRlZDNhZGI3YzFlZTk2NjdiNzVlYmY3NGI2MjRjYTQzNTIxODI1MzJlNTM5YmU5MjcwMDQyNjI5OCIsImF1ZCI6IlZQUyIsImV4cCI6MTYyMDI3NDEwNywiaWF0IjoxNjIwMTg3Njk3LCJpc3MiOiJLRVlNQVNURVIiLCJ0eXBlIjoiQmVhcmVyIiwianRpIjoiNzc1ZmUxMTAtNjNlZi00NjI2LTkxYTQtZjk2N2I3MTVhNTM5Iiwic2lkIjoiNTg3MTMwZjEtNGM3OC00MGQyLWJjOGYtNTkyMGU4NjBiNzk5In0.Cxnjl0IKzNfW9JiIZOBflt2iGB2Uc_RBj-u4_7vIck01_XXzVh2t0zvKn7Oow-aU_Dc4cYYGL4Nnmkoy-lapBW5KNGgi8OCZ_8rXRCDkZaywNtbfGdfLjbaeiOSQAwGOKAdSHTN-X-zENvaJlIHuIpVkbH9Qf7FEvu5Q8UL6a3WiR2rjFLw4_ncoY34G88MGV16P94oxynCQvA1EARdlL5UzC7FLaZCSuYxL9XRWs-Sb0lElt337XWeE1EqiAY0LZEEOQW8IVFnLXtEWL8VJ9m7GczDtkiBtt9DKYvz0yIvDkiQGrhLBsbxbwF6TlmTSlWBmWqZi4rECTqJN9zfdZrjFrbzb_hKpoc9f6fV_cfIBAfN0yCyePld4WC_0LI90oFIrJj9IvulEMJrwiHQh8qcLpcHcNvKtx3UBl5Ffi1dhAYaiNAsHG4OCDSG0MfsE0sx2Nh0t9YZ9YPiXMpzl2Rg3nySrzONAiDGj8UL74wo9G_0Gdym36z_54XvR_oQG0t8Ue9W8UZaqldAyfgoTrm-EepqmRtmk474cNK4E-oiGETGjOLdqKR1nVrSXeQPQgzIrmvuVu8eqXt_n0mw0rULHqxJS8ua--UNOsVhI6s6iITLqn_riw79APdmDeCbtsFJRqAQeAq-G3TKHfjSjjMlrrp229KYCvBKqNu_aVn4\",\n      initPhrase: `Запусти ${process.env.REACT_APP_SMARTAPP}`,\n      getState,\n    });\n  }\n\n  return createAssistant({ getState });\n};\n\nlet valueCount = 10;\nlet valueHunger = 2;\nlet valueLevel = 2;\n\nexport const App: FC = memo(() => {\n  const [appState, dispatch] = useReducer(reducer, { notes: [] });\n\n  //const [note, setNote] = useState(\"\");\n\n  const assistantStateRef = useRef<AssistantAppState>();\n  const assistantRef = useRef<ReturnType<typeof createAssistant>>();\n\n  useEffect(() => {\n    assistantRef.current = initializeAssistant(() => assistantStateRef.current);\n\n    assistantRef.current.on(\"data\", ({ action }: any) => {\n      if (action) {\n        dispatch(action);\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    assistantStateRef.current = {\n      item_selector: {\n        items: appState.notes.map(({ id, title }, index) => ({\n          number: index + 1,\n          id,\n          title,\n        })),\n      },\n    };\n  }, [appState]);\n\n\n\n  //function testFunc() {\n   // let elem = document.getElementById(\"result\");    \n   // elem!.innerHTML = \"\" + valueCount + \" \" + valueHunger + \" \" + valueLevel; \n   \n  //}  \n\n  const classes = useStyles();\n  // eslint-disable-next-line\n  const [value, setValue] = React.useState(30);\n\n  function renderResult(){\n    let xHunger = 0\n    let xLevel = 0;\n    let result = 0\n    if (valueHunger === 1) {\n      xHunger = 0.3;\n    }\n    if (valueHunger === 2) {\n      xHunger = 0.4;\n    }\n    if (valueHunger === 3) {\n      xHunger = 0.5;\n    }\n    if (valueLevel === 1) {\n      xLevel = 0.0;\n    }\n    if (valueLevel === 2) {\n      xLevel = 0.1;\n    }\n    if (valueLevel === 3) {\n      xLevel = 0.2;\n    }\n    result = valueCount * (xHunger+xLevel);\n    let elem = document.getElementById(\"result\");\n    elem!.innerHTML = \"Вам потребуется: \" + result + \"кг шашлындоса.\";\n  }\n\n  const handleChangeHunger = (event, newValue) => {\n    setValue(newValue);\n    valueHunger = newValue;    \n    renderResult();\n  };\n\n  const handleChangeCount = (event, newValue) => {\n    setValue(newValue);\n    valueCount = newValue;\n    renderResult();\n  };\n\n  const handleChangeLevel = (event, newValue) => {\n    setValue(newValue);\n    valueLevel = newValue;\n    renderResult();\n  };\n\n  \n\n  return (\n    <main className=\"container\">\n      <h1 id=\"text\">Шашлычный калькулятор</h1>\n      <Typography id=\"discrete-slider-small-steps\" gutterBottom>\n        1. Сколько вас людей в компании\n      </Typography>\n      <Slider\n        defaultValue={10}        \n        aria-labelledby=\"discrete-slider-small-steps\"\n        step={1}\n        marks\n        onChange={handleChangeCount}\n        min={1}\n        max={20}\n        valueLabelDisplay=\"auto\"\n      />\n      <Typography id=\"discrete-slider-small-steps\" gutterBottom>\n        2. Какое мясо жарим\n      </Typography>\n      <div className={classes.root}>\n        <Button variant=\"outlined\" color=\"primary\">\n          Свинина\n        </Button>\n        <Button variant=\"outlined\" color=\"primary\">\n          Говядина\n        </Button>\n        <Button variant=\"outlined\" color=\"primary\">\n          Баранина\n        </Button>\n        <Button variant=\"outlined\" color=\"primary\">\n          Курица\n        </Button>\n      </div>\n\n      <Typography id=\"discrete-slider-small-steps\" gutterBottom>\n        3. Насколько сильно голодны\n      </Typography>\n      <Slider\n        defaultValue={2}        \n        aria-labelledby=\"discrete-slider-small-steps\"\n        step={1}\n        onChange={ handleChangeHunger } \n        marks\n        min={1}\n        max={3}\n        valueLabelDisplay=\"auto\"\n      />\n      <Typography id=\"discrete-slider-small-steps\" gutterBottom>\n        4. Сколько планируем балдеть?\n      </Typography>\n      <Slider\n        defaultValue={2}        \n        aria-labelledby=\"discrete-slider-small-steps\"\n        step={1}\n        marks\n        onChange={handleChangeLevel}\n        min={1}\n        max={3}\n        valueLabelDisplay=\"auto\"\n      />\n      <Typography id=\"discrete-slider-small-steps\" gutterBottom>\n        Ваш рецепт шашличного балдежа\n      </Typography>\n      <Typography id=\"result\" gutterBottom>\n        \n      </Typography>          \n\n    </main>\n  );\n});\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}